apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 34)
    buildToolsVersion safeExtGet('buildToolsVersion', '34.0.0')

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 24)
        targetSdkVersion safeExtGet('targetSdkVersion', 34)
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
    google()
}


buildscript {
   repositories {
       mavenCentral()
       google()
   }
   dependencies {
       classpath 'com.android.tools.build:gradle:7.0.3'
       //classpath 'com.google.android.gms:strict-version-matcher-plugin:1.2.2'
   }
}

dependencies {
    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    implementation('androidx.media3:media3-exoplayer:1.1.1') {
        exclude group: 'com.android.support'
    }

    // All support libs must use the same version
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.core:core:1.12.0"
    implementation "androidx.media:media:1.1.0"
    implementation "androidx.activity:activity:1.4.0"

    implementation('androidx.media3:media3-datasource-okhttp:1.1.1') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    implementation "com.squareup.okhttp3:okhttp:" + '$OKHTTP_VERSION'
    implementation 'com.google.code.gson:gson:2.8.9'
}
